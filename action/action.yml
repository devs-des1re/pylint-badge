name: "Pylint Badge Action"
description: "Runs Pylint and generates JSON for Shields.io badge"
author: "devs-des1re"
inputs:
  output_file:
    description: "JSON file to create for the badge"
    required: false
    default: "pylint.json"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
      shell: bash

    - name: Run Pylint and create JSON badge
      run: |
        PYLINT_SCORE=$(pylint . --exit-zero | grep 'Your code has been rated at' | awk '{print $7}' | cut -d'/' -f1)

        if [[ "$PYLINT_SCORE" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
            if (( $(echo "$PYLINT_SCORE > 0" | bc -l) )); then
                echo "Score is acceptable"
            else
                echo "Score is low, but workflow will not fail"
            fi
        else
            echo "Unable to parse score, but workflow will not fail"
        fi

        # Decide color based on score
        if (( $(echo "$SCORE >= 9.0" | bc -l) )); then COLOR="brightgreen"
        elif (( $(echo "$SCORE >= 7.0" | bc -l) )); then COLOR="green"
        elif (( $(echo "$SCORE >= 5.0" | bc -l) )); then COLOR="yellow"
        else COLOR="red"; fi

        cat > ${{ inputs.output_file }} <<EOF
        {
          "schemaVersion": 1,
          "label": "Pylint",
          "message": "$SCORE",
          "color": "$COLOR"
        }
        EOF
      shell: bash

    - name: Commit JSON badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pylint-badge.svg
        git commit -m "Update Pylint JSON badge"
      shell: bash

    - name: Push badge to repo
      run: |
        git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/devs-des1re/pylint-badge.git
      shell: bash
