name: "Pylint Badge Generator"
description: "Runs Pylint on your repo, generates a badge with the score, and commits it."
author: "devs-des1re"
inputs:
  output_file:
    description: "Filename for the generated badge"
    required: false
    default: "pylint-badge.svg"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pybadges

    - name: Run Pylint and get score
      id: pylint
      shell: bash
      run: |
        # Run pylint and capture the final score
        SCORE=$(pylint . --exit-zero | tail -n 1 | grep -o "[0-9]\+\(\.[0-9]\+\)\?")
        echo "score=$SCORE" >> $GITHUB_OUTPUT

    - name: Generate badge
      shell: python
      run: |
        import pybadges
        import os
        score = os.getenv("INPUT_SCORE") or os.getenv("SCORE") or "0.0"
        output_file = os.getenv("INPUT_OUTPUT_FILE") or "pylint-badge.svg"

        # Determine color based on score
        s = float(score)
        if s >= 9.0:
            color = "brightgreen"
        elif s >= 7.0:
            color = "green"
        elif s >= 5.0:
            color = "yellow"
        else:
            color = "red"

        badge_svg = pybadges.badge(
            left_text="Pylint",
            right_text=score,
            left_color="#555",
            right_color=color
        )

        with open(output_file, "w") as f:
            f.write(badge_svg)

    - name: Commit badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ inputs.output_file }}
        git commit -m "Update Pylint badge" || echo "No changes to commit"
        git push
